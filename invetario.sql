-- MySQL Script generated by MySQL Workbench
-- 05/03/16 17:59:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema inventario
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema inventario
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inventario` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish_ci ;
USE `inventario` ;

-- -----------------------------------------------------
-- Table `inventario`.`src_generica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`src_generica` (
  `tip_tabla` VARCHAR(6) NOT NULL,
  `cod_tabla` VARCHAR(6) NOT NULL,
  `nom_tabla` VARCHAR(45) NULL,
  `cod_auxiliar` VARCHAR(45) NULL,
  `cod_auxiliar1` VARCHAR(45) NULL,
  `nom_alias` VARCHAR(45) NULL,
  `ind_privada` INT NOT NULL,
  PRIMARY KEY (`tip_tabla`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`bas_tercero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`bas_tercero` (
  `id_tercero` INT NOT NULL AUTO_INCREMENT,
  `num_identificacion` VARCHAR(45) NOT NULL,
  `tip_identificacion` VARCHAR(5) NOT NULL,
  `nom_tercero` VARCHAR(45) NOT NULL,
  `seg_nombre` VARCHAR(45) NULL,
  `pri_apellido` VARCHAR(45) NULL,
  `seg_apellido` VARCHAR(45) NULL,
  `gen_tercero` VARCHAR(2) NULL,
  `fec_nacimiento` DATE NULL,
  `dir_residencia` VARCHAR(45) NULL,
  `dir_email` VARCHAR(45) NULL,
  `tel_residencia` VARCHAR(45) NULL,
  `tel_celular` VARCHAR(45) NULL,
  `src_generica_tip_tabla` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`id_tercero`),
  INDEX `fk_bas_tercero_src_generica1_idx` (`src_generica_tip_tabla` ASC),
  CONSTRAINT `fk_bas_tercero_src_generica1`
    FOREIGN KEY (`src_generica_tip_tabla`)
    REFERENCES `inventario`.`src_generica` (`tip_tabla`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
PACK_KEYS = DEFAULT;


-- -----------------------------------------------------
-- Table `inventario`.`tipo_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`tipo_producto` (
  `id_tipo` INT NOT NULL AUTO_INCREMENT,
  `des_tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `cod_producto` VARCHAR(45) NULL,
  `nom_producto` VARCHAR(45) NULL,
  `des_producto` VARCHAR(45) NULL,
  `tipo_producto` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_tipo_producto2_idx` (`tipo_producto` ASC),
  CONSTRAINT `fk_producto_tipo_producto2`
    FOREIGN KEY (`tipo_producto`)
    REFERENCES `inventario`.`tipo_producto` (`id_tipo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`bas_empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`bas_empresa` (
  `id_empresa` INT NOT NULL AUTO_INCREMENT,
  `nit_empresa` VARCHAR(45) NOT NULL,
  `nom_empresa` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `direccion` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`id_empresa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`proveedor` (
  `id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `nit_proveedor` VARCHAR(45) NULL,
  `nom_proveedor` VARCHAR(45) NULL,
  `dir_proveedor` VARCHAR(45) NULL,
  PRIMARY KEY (`id_proveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`est_orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`est_orden` (
  `id_estado` INT NOT NULL,
  `des_estado` VARCHAR(45) NULL,
  PRIMARY KEY (`id_estado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`orden_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`orden_pedido` (
  `id_orden` INT NOT NULL AUTO_INCREMENT,
  `con_orden` VARCHAR(45) NULL,
  `cantidad` INT NULL,
  `proveedor_id_proveedor` INT NOT NULL,
  `est_orden_id_estado` INT NOT NULL,
  PRIMARY KEY (`id_orden`),
  INDEX `fk_orden_pedido_proveedor1_idx` (`proveedor_id_proveedor` ASC),
  INDEX `fk_orden_pedido_est_orden1_idx` (`est_orden_id_estado` ASC),
  CONSTRAINT `fk_orden_pedido_proveedor1`
    FOREIGN KEY (`proveedor_id_proveedor`)
    REFERENCES `inventario`.`proveedor` (`id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_pedido_est_orden1`
    FOREIGN KEY (`est_orden_id_estado`)
    REFERENCES `inventario`.`est_orden` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`inventario` (
  `id_inventario` INT NOT NULL AUTO_INCREMENT,
  `stock` VARCHAR(45) NULL,
  `fech_ingreso` DATE NULL,
  `producto_id_producto` INT NOT NULL,
  PRIMARY KEY (`id_inventario`, `producto_id_producto`),
  INDEX `fk_inventario_producto1_idx` (`producto_id_producto` ASC),
  CONSTRAINT `fk_inventario_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `inventario`.`producto` (`id_producto`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventario`.`ingreso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`ingreso` (
  `id_ingreso` INT NOT NULL,
  `fech_ingreso` VARCHAR(45) NULL,
  `cantidad` VARCHAR(45) NULL,
  `producto_id_producto` INT NOT NULL,
  `orden_pedido_id_orden` INT NOT NULL,
  PRIMARY KEY (`id_ingreso`),
  INDEX `fk_ingreso_producto1_idx` (`producto_id_producto` ASC),
  INDEX `fk_ingreso_orden_pedido1_idx` (`orden_pedido_id_orden` ASC),
  CONSTRAINT `fk_ingreso_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `inventario`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ingreso_orden_pedido1`
    FOREIGN KEY (`orden_pedido_id_orden`)
    REFERENCES `inventario`.`orden_pedido` (`id_orden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `inventario` ;

-- -----------------------------------------------------
-- Placeholder table for view `inventario`.`vis_inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inventario`.`vis_inventario` (`id_inventario` INT, `fech_ingreso` INT, `cod_producto` INT, `nom_producto` INT, `stock` INT);

-- -----------------------------------------------------
-- View `inventario`.`vis_inventario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventario`.`vis_inventario`;
USE `inventario`;
CREATE  OR REPLACE VIEW `vis_inventario` AS
SELECT a.id_inventario, 
a.fech_ingreso, 
b.cod_producto, 
b.nom_producto,
a.stock
from inventario a
inner join producto b
on a.producto_id_producto = b.id_producto;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `inventario`;

DELIMITER $$
USE `inventario`$$
CREATE TRIGGER `inventario`.`producto_AFTER_INSERT` AFTER INSERT ON `producto` FOR EACH ROW
BEGIN
declare ID INT;
SET ID = 1;
INSERT INTO inventario
(stock,fech_ingreso,producto_id_producto)
VALUES (0,CURDATE(),NEW.id_producto);
END$$


DELIMITER ;
